// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _01_initial.Models;

namespace _01_initial.Migrations
{
    [DbContext(typeof(EgeDbContext))]
    [Migration("20220424164631_categoryconfig")]
    partial class categoryconfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_01_initial.Models.Categories", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventsEventId")
                        .HasColumnType("int");

                    b.HasKey("Category_Id");

                    b.HasIndex("EventsEventId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("_01_initial.Models.City", b =>
                {
                    b.Property<int>("City_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventsEventId")
                        .HasColumnType("int");

                    b.HasKey("City_Id");

                    b.HasIndex("EventsEventId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("_01_initial.Models.Events", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("_01_initial.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chk_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("EMail")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_01_initial.Models.Categories", b =>
                {
                    b.HasOne("_01_initial.Models.Events", null)
                        .WithMany("Category_Name")
                        .HasForeignKey("EventsEventId");
                });

            modelBuilder.Entity("_01_initial.Models.City", b =>
                {
                    b.HasOne("_01_initial.Models.Events", null)
                        .WithMany("City_Name")
                        .HasForeignKey("EventsEventId");
                });

            modelBuilder.Entity("_01_initial.Models.Events", b =>
                {
                    b.Navigation("Category_Name");

                    b.Navigation("City_Name");
                });
#pragma warning restore 612, 618
        }
    }
}
